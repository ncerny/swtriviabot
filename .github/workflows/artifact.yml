name: Build Artifact

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to build artifact for'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-artifact:
    name: Build and Upload Artifact
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag || github.event.release.tag_name }}

      - name: Set tag name
        id: set-tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG_NAME=${{ inputs.tag }}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          fi

      - name: Create production artifact
        run: |
          # Create temporary directory for artifact contents
          mkdir -p artifact-build
          
          # Copy production files (exclusions based on .github/.artifactignore)
          tar --exclude-from=.github/.artifactignore \
              --exclude='artifact-build' \
              -czf artifact-build/swtriviabot-${TAG_NAME}.tar.gz \
              .

      - name: Verify artifact contents
        run: |
          echo "Artifact created: swtriviabot-${TAG_NAME}.tar.gz"
          echo "Artifact size:"
          ls -lh artifact-build/swtriviabot-${TAG_NAME}.tar.gz
          echo ""
          echo "Artifact contents preview:"
          tar -tzf artifact-build/swtriviabot-${TAG_NAME}.tar.gz | head -n 50

      - name: Upload artifact to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${TAG_NAME} \
            artifact-build/swtriviabot-${TAG_NAME}.tar.gz \
            --clobber

      - name: Add artifact info to release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          ARTIFACT_SIZE=$(ls -lh artifact-build/swtriviabot-${TAG_NAME}.tar.gz | awk '{print $5}')
          CURRENT_BODY=$(gh release view ${TAG_NAME} --json body -q .body)
          
          # Create artifact info section
          {
            echo ""
            echo "---"
            echo ""
            echo "## ðŸ“¦ Deployment Artifact"
            echo ""
            echo "File: \`swtriviabot-${TAG_NAME}.tar.gz\` (${ARTIFACT_SIZE})"
            echo ""
            echo "Contents: Production-ready code (excludes tests, development tools, and documentation)"
            echo ""
            echo "Deploy:"
            echo "\`\`\`bash"
            echo "# Download and extract"
            echo "curl -LO https://github.com/${REPO}/releases/download/${TAG_NAME}/swtriviabot-${TAG_NAME}.tar.gz"
            echo "tar -xzf swtriviabot-${TAG_NAME}.tar.gz"
            echo "cd swtriviabot-${TAG_NAME}"
            echo ""
            echo "# Install dependencies and run"
            echo "python -m venv .venv"
            echo "source .venv/bin/activate"
            echo "pip install -r requirements.txt"
            echo "python -m src.bot"
            echo "\`\`\`"
          } > release-notes-append.md
          
          # Combine with existing release notes
          echo "${CURRENT_BODY}" > full-release-notes.md
          cat release-notes-append.md >> full-release-notes.md
          gh release edit ${TAG_NAME} --notes-file full-release-notes.md
